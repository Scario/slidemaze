<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd=17;
canmove=1;
hspeed=0;
vspeed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//key_up=keyboard_check_pressed(vk_up);
//key_down=keyboard_check_pressed(vk_down);
//key_left=keyboard_check_pressed(vk_left);
//key_right=keyboard_check_pressed(vk_right);

if (canmove)
 switch (keyboard_key)
    {
    case vk_left:
    case ord("A"):
       hspeed -= spd;
       canmove=0;
       break;
    case vk_right:
    case ord("D"):
       hspeed += spd;
       canmove=0;
       break;
    case vk_up:
    case ord("W"):
       vspeed -= spd;
       canmove=0;
       break;
    case vk_down:
    case ord("S"):
       vspeed += spd;
       canmove=0;
       break;
    }
    
//if place_meeting(x+hspeed,y+vspeed,obj_wall)
//{
//    hspeed=0;
//    vspeed=0;
//    canmove=1;

//}

if (place_meeting(x+hspeed,y,obj_wall))
{
    while (!place_meeting(x+sign(hspeed),y,obj_wall))
    {
        x+=sign(hspeed);
    }
    hspeed=0;
    canmove=1;
}


if (place_meeting(x,y+vspeed,obj_wall))
{
    while (!place_meeting(x,y+sign(vspeed),obj_wall))
    {
        y+=sign(vspeed);
    }
    vspeed=0;
    canmove=1;
}

if (place_meeting(x,y,obj_next))
{
    room_goto_next();
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
